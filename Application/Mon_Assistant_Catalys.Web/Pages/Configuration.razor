@page "/configuration"
@using Radzen
@using Mon_Assistant_Catalys.Web.Models
@using Mon_Assistant_Catalys.Web.Services

<meta charset="UTF-8">

<!-- Page de configuration du questionnaire-->
<div class="main">
    <div class="row">
        <div class="col-7">
            <RadzenTree Data="@toDisplayTree" Expand="@OnExpand" Change="@OnChange">
                <RadzenTreeLevel TextProperty="Text" />
            </RadzenTree>
        </div>
        <div class="col-5">
            @if (question.IdQuestion != 0)
            {
            <EditForm Model="@question" OnValidSubmit="@SaveQuestion">
                <div class="row">
                    <div class="col-2">
                        <label class="font-weight-bold">Question</label>
                    </div>
                    <div class="col-10">
                        <InputText class="form-control" @bind-Value="question.Text" placeholder="Contenu de la question" />
                    </div>
                </div>

                <br />

                @if (question.Answers != null)
                {
                    <label class="font-weight-bold">Réponse</label>

                    @foreach (Answer rep in question.Answers)
                    {
                        <div class="row">
                            <span class="col-2"></span>
                            <div class="col-9">
                                <InputText class="form-control" @bind-Value="@rep.Text" placeholder="Contenu de la reponse" />
                            </div>
                            <div class="col-1">
                                <input type="submit" class="form-control btn-primary color_orange" value="Suppr" />
                            </div>
                        </div>
                    }
                }

                <br />

                <div class="row">
                    <span class="col-3"></span>
                    <div class="col-9">
                        <input type="submit" class="form-control btn-primary color_orange" value="Ajouter réponse" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-3"></span>
                    <div class="col-9">
                        <input type="submit" class="form-control btn-primary color_orange" value="Sauvegarder"  @onClick="OnExit" />
                    </div>
                </div>       
                
            </EditForm>
            
            }
        </div>
    </div>
</div>

@code { public Question question { get; set; }
    public Answer answer { get; set; }

    Question currentQuestion = null;

    public Mon_Assistant_Catalys.Web.Models.Questionnaire questionnaire = new Mon_Assistant_Catalys.Web.Models.Questionnaire();
    QuestionnaireService service = new QuestionnaireService();
    List<Question> toDisplayQuestionnaire = new List<Question>();

    List<Question> toDisplayTree = null;

    protected override void OnInitialized()
    {
        question = new Question();

        questionnaire = service.GetQuestionnaire();

        toDisplayTree = new List<Question>();

        toDisplayTree = service.TransformToTree();

        foreach (Question quest in questionnaire.Questions)
        {
            if (quest.IdQuestion == 1)
            {
                question = quest;
            }
        }
    }

    void OnExpand(TreeExpandEventArgs args)
    {
        currentQuestion = args.Value as Question;

        List<Question> questions = new List<Question>();

        try
        {
            foreach (Answer answer in currentQuestion.Answers)
            {
                questions.Add(answer.Question);
            }

            args.Children.Data = questions;
            args.Children.TextProperty = "Text";

            foreach (Question question in questions)
            {
                if (question.Answers == null)
                {
                    args.Children.HasChildren = (Answer) => false;
                }
            }
        }
        catch (Exception)
        {
            //TODO add log message
            throw;
        }
    }

    void OnChange(TreeEventArgs args)
    {
        question = args.Value as Question;
    }

    private void SaveQuestion()
    {
        //TODO
        //context.SaveQuestion(question);
    }

    void OnExit()
    {
        service.UpdateJsonFiles();
    } }